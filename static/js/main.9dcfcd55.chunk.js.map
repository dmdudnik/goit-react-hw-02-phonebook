{"version":3,"sources":["components/ContactList/ContactList.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactList","contact","onDeleteContact","className","styles","map","id","name","number","ContactListItem","ContactListBtn","type","onClick","Form","state","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","addContact","reset","onSubmit","this","FormLabel","FormInput","onChange","pattern","title","required","handleInputChenge","FormBtn","Component","Filter","filter","onFilterChange","target","Phonebook","contacts","some","item","toLowerCase","alert","prevState","uuidv4","contactId","includes","visibleContacts","getFilteredContacts","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dcfcd55.chunk.js","sourcesContent":["import styles from '../ContactList/ContactList.module.css';\r\n\r\nconst ContactList = ({ contact, onDeleteContact }) => (\r\n  <ul className={styles.ContactList}>\r\n    {contact.map(({ id, name, number }) => (\r\n      <li className={styles.ContactListItem} key={id}>\r\n        <span>{name} :</span>\r\n        <span> {number} </span>\r\n        <button\r\n          className={styles.ContactListBtn}\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          {' '}\r\n          Del\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;","import { Component } from 'react';\r\nimport styles from '../Form/Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.addContact({ ...this.state });\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.FormLabel}>\r\n          Name\r\n          <input\r\n            className={styles.FormInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.FormLabel}>\r\n          Number\r\n          <input\r\n            className={styles.FormInput}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleInputChenge}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.FormBtn} type=\"submit\">\r\n          {' '}\r\n          Add Contact{' '}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","const Filter = ({ filter, onFilterChange }) => {\r\n  const onChange = e => {\r\n    onFilterChange(e.target.value);\r\n  };\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" value={filter} onChange={onChange} name=\"filter\" />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Form from '../Form/Form';\r\nimport Filter from '../Filter/Filter';\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    contacts: [\r\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n    ],\r\n    filter: '',\r\n  };\r\n  addContact = contact => {\r\n    if (\r\n      this.state.contacts.some(\r\n        item => item.name.toLowerCase() === contact.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert('This contact is already exist!! Try one more time, please!');\r\n      return;\r\n    }\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, { ...contact, id: uuidv4() }],\r\n    }));\r\n  };\r\n\r\n  onDeleteContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  getFilteredContacts() {\r\n    return this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\r\n    );\r\n  }\r\n\r\n  onFilterChange = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  render() {\r\n    const visibleContacts = this.getFilteredContacts();\r\n    const { filter } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <Form addContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onFilterChange={this.onFilterChange} />\r\n        {visibleContacts.length > 0 ? (\r\n          <ContactList\r\n            contact={visibleContacts}\r\n            onDeleteContact={this.onDeleteContact}\r\n          />\r\n        ) : (\r\n          <p>No Contacts</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;","import React from 'react';\nimport Phonebook from './components/Phonebook/Phonebook';\n\nconst App = () => {\n  return <Phonebook />;\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}